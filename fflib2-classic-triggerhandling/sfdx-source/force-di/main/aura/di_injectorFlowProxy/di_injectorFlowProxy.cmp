<aura:component>

    <!-- Flow name to inject -->
    <aura:attribute name="flowName" type="String" required="true"/>

    <!--
        Design is for injector component to pass all of its injector attribute child tags
        as-is to this attribute, and then this component will parse the attributes.
        This minimizes how much the injector component must know to invoke this one.
     -->
    <aura:attribute name="injectorAttributes" type="Aura.Component[]"/>

    <aura:handler name="init" value="{!this}" action="{!c.doInit}"/>

    <!--
        Design is rather than upstream components passing Aura.Method
        as injector attributes to bind to the lightning:flow's onstatuschange callback,
        instead we proxy the callback into a component event for upstream components to handle.
     -->
    <aura:registerEvent name="injectorFlowProxyStatusChanged" type="c:di_injectorFlowProxyStatusChanged"/>

    <span aura:id="flowContainer">
        <!--
            A lightning:flow component will dynamically be created and added here.
         -->
    </span>

</aura:component>
